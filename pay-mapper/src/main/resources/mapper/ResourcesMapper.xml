<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="quick.pager.pay.mapper.user.ResourcesMapper">
  <resultMap id="BaseResultMap" type="quick.pager.pay.model.user.Resources">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component_name" jdbcType="VARCHAR" property="componentName" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="redirect" jdbcType="VARCHAR" property="redirect" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="hidden" jdbcType="BIT" property="hidden" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_status" jdbcType="BIT" property="deleteStatus" />
  </resultMap>

  <sql id="Base_Column_List">
    id, parent_id, path,component_name, component,redirect, permission, resource_type, sequence,hidden,
    create_time, update_time, delete_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_resources
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_resources
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="quick.pager.pay.model.user.Resources">
    insert into t_resources
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="componentName != null">
        component_name,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="redirect != null">
        redirect,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="componentName != null">
        #{componentName,jdbc=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="redirect != null">
        #{redirect,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="quick.pager.pay.model.user.Resources">
    update t_resources
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="componentName != null">
        component_name = #{componentName,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="redirect != null">
        redirect = #{redirect,jdbc=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="hidden != null">
        hidden = #{hidden,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectAllResource" resultType="quick.pager.pay.vo.ResourceVO">
    SELECT
        t.id,
        t.path,
        t.component_name AS componentName,
        t.component,
        t.redirect,
        t.permission,
        t.resource_type AS resourceType,
        t.hidden,
        m.title,
        m.icon,
        m.no_cache AS noCache
    FROM t_resources t
    LEFT JOIN t_meta m ON t.id = m.res_id
    <where>
      t.delete_status = false AND t.parent_id = #{parentId}
      <if test="resourceType != null">
        and t.resource_type = #{resourceType}
      </if>
    </where>
    order by t.id asc
  </select>

  <select id="selectResourceByUserId" resultType="quick.pager.pay.vo.ResourceVO">
    SELECT
        t.id,
        t.path,
        t.component_name AS componentName,
        t.component,
        t.redirect,
        t.permission,
        t.resource_type AS resourceType,
        t.hidden,
        m.title,
        m.icon,
        m.no_cache AS noCache
    FROM
        t_resources t
    LEFT JOIN t_meta m ON t.id = m.res_id
    LEFT JOIN t_role_resources rre ON t.id = rre.res_id
    LEFT JOIN t_user_role ur ON ur.role_id = rre.role_id
    <where>
      t.delete_status = false
      <if test="userId != null">
        and ur.user_id = #{userId}
      </if>
      <if test="parentId != null">
        and t.parent_id = #{parentId}
      </if>
      <if test="resourceType != null">
        and t.resource_type = #{resourceType}
      </if>
    </where>
    order by t.id asc
  </select>

  <select id="selectResourceByRoleId" resultType="long">
    select res.id from t_resources res left join t_role_resources rres on res.id = rres.res_id
      where rres.delete_status = 0 and rres.role_id = #{roleId}
  </select>
</mapper>